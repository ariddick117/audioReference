(() => {
	// structure
	console.log("My JS issa Working!")

	function logKeyCode(event) {
		// debugger;
		// event is an OBJECT that is generated by any event
		// It contains all of the info about the event, what triggered it, where it occured on the page, etc.


		console.log(event.keyCode);
		// find me the audio element that coresponds to
		let currentKey = document.querySelector(`div[data-key="${event.keyCode}"]`);

		if (!currentKey) return;
			// if there is no matching div with that key, then exit

			// apply the playing class to the current div (the matching keycode)
			currentKey.classList.add('playing');

			// play the audio that goes with interval
			let currentAudioClip = document.querySelector(`audio[data-key="${event.keyCode}"]`);
			currentAudioClip.currentTime = 0;
			currentAudioClip.play();
		}

	function removePlayingClass(event) {
		// listen for the transition to end, then remove the playing class from the current key

		// i need a transition that only fires once so that i only run this function once => transform
		if (event.propertyName !== "transform") return;
			// event.target is the target of the current event => in this case, it is the DIV 
			// because that is the element that's transitioning
			event.target.classList.remove('playing');
		}

	const keys = Array.from(document.querySelectorAll('.key'));
	keys.forEach(key => key.addEventListener('transitionend', removePlayingClass));

	// try to get the keyboard keypress events
	window.addEventListener("keydown", logKeyCode);
})();